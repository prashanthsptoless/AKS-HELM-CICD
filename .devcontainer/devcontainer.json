// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.177.0/containers/azure-terraform
{
	"name": "Container Pipelines",
	"build": {
		"dockerfile": "Dockerfile",
		"args": { 
			"TERRAFORM_VERSION": "1.0.11",
			"TFLINT_VERSION": "0.24.1",
			"TERRAGRUNT_VERSION": "0.28.1",
			"INSTALL_AZURE_CLI": "true",
			"INSTALL_DOCKER": "true",
			"INSTALL_NODE": "true",
			"NODE_VERSION": "11"
		}
	},
	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind" ],
	"overrideCommand": false,
	"runArgs": ["--env-file",".devcontainer/devcontainer.env"],
    "remoteEnv": {
		// Sets environment variables required for terrafom remote backend
		"TF_BACKEND_RESOURCE_GROUP" : "${containerEnv:TF_BACKEND_RESOURCE_GROUP}",
		"TF_BACKEND_LOCATION": "${containerEnv:TF_BACKEND_LOCATION}",
		"TF_BACKEND_STORAGE_ACCOUNT" : "${containerEnv:TF_BACKEND_STORAGE_ACCOUNT}",                
		"TF_BACKEND_CONTAINER" : "${containerEnv:TF_BACKEND_CONTAINER}",
		"TF_BACKEND_KEY" : "${containerEnv:TF_BACKEND_KEY}",

		// Use 'TF_VAR' prefix to set input variables for terraform templates
		// "TF_VAR_rg_name":  "${containerEnv:TF_VAR_RG_NAME}"
		"AWS_ACCESS_KEY_ID":"${localEnv:AWS_ACCESS_KEY_ID}",
		"AWS_SECRET_ACCESS_KEY":"${localEnv:AWS_SECRET_ACCESS_KEY}",
	},
	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.defaultProfile.linux": "zsh",
		"terminal.integrated.defaultProfile.osx": "zsh",
		"vs-kubernetes": {
			"vs-kubernetes.namespace": "apps",
			"vs-kubernetes.kubectl-path": "/usr/local/bin/kubectl",
			"vs-kubernetes.helm-path": "/usr/local/bin/helm",
			"imageBuildTool": "Docker"
		},
		"terraform.languageServer": {
			"enabled": true,
			"args": []
		},
		"azureTerraform.terminal": "integrated"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"hashicorp.terraform",
		"github.vscode-pull-request-github",
		"ms-vscode.azurecli",
		"ms-azuretools.vscode-azureterraform",
		"ms-kubernetes-tools.vscode-kubernetes-tools",
		"ms-azuretools.vscode-docker",
		"ms-azure-devops.azure-pipelines",
		"mhutchie.git-graph",
		"ms-dotnettools.csharp"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "terraform --version",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}